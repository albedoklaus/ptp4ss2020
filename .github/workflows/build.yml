on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    #container: debian:buster
    steps:
      - name: Install dependencies
        run: |
          #apt update
          #apt install -y git hub perl python wget
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          printf 'Token: %s\n' "$GITHUB_TOKEN"
          printf 'noToken: %s\n' "$NOGITHUB_TOKEN"
          export GITHUB_TOKEN
          echo 0
          git config -l
          hub release delete latest || true
          echo 1
          git tag -d latest || true
          echo 2
          git push -d "https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}" latest || true
          echo 3
          #hub release create -a "build/ue1.pdf" -a "build/README.pdf" -m "Latest release" -m "https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" latest
          #hub release create -a "build/Zettel1.pdf" -m "Latest release" -m "https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" latest
          hub release create -m "Latest release" -m "https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" latest
          for pdffile in build/*.pdf
          do
            hub release edit -m "" -a "$pdffile" latest
          done
          exit 1
      - name: Install TeX Live
        run: |
          temp="$(mktemp -d)"
          url=http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
          wget -qO - "$url" | tar --strip-components=1 -C "$temp" -xzvf -
          scheme="scheme-minimal"
          printf '%s\n' "selected_scheme $scheme" "instopt_adjustpath 1" | tee -a "$temp/texlive.profile"
          (cd "$temp" && ./install-tl -profile texlive.profile)
          tlmgr install latex latex-bin latex-fonts latexconfig
          tlmgr install collection-latexrecommended collection-fontsrecommended
          tlmgr install babel babel-english babel-german hyphen-german
          tlmgr install latexmk biber texliveonfly
      - name: Install pandoc
        run: |
          temp="$(mktemp -d)"
          url=https://api.github.com/repos/jgm/pandoc/releases/latest
          url="$(wget -qO - "$url" | tr '"' '\n' | grep '.*/download/.*-amd64.deb')"
          filename="$temp/pandoc-latest-amd64.deb"
          wget -O "$filename" "$url"
          dpkg -i "$filename"
      - name: Build PDF files
        run: |
          PATH="${PATH}:$(cd /usr/local/texlive/*/bin/* && pwd)"
          for mdfile in *.md
          do
            printf '%s\n' "Run pandoc for $mdfile"
            pandoc "$mdfile" --standalone -o "$(basename "$mdfile" .md).tex"
          done
          for texfile in *.tex
          do
            printf '%s\n' "Run texliveonfly for $texfile"
            texliveonfly --compiler=pdflatex --arguments="-draftmode -interaction=nonstopmode" "$texfile"
          done
          printf '%s\n' "Run latexmk *.pdf"
          latexmk -pdf -pdflatex="pdflatex -interaction=nonstopmode -halt-on-error" *.tex
          rm -rf build
          mkdir -p build
          mv *.pdf build
      #- name: Upload artifacts
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: PDF files
      #    path: build
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export GITHUB_TOKEN
          echo 0
          hub release delete latest || true
          echo 1
          git tag -d latest || true
          echo 2
          git push -d "https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}" latest || true
          echo 3
          #hub release create -a "build/ue1.pdf" -a "build/README.pdf" -m "Latest release" -m "https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" latest
          #hub release create -a "build/Zettel1.pdf" -m "Latest release" -m "https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" latest
          hub release create -m "Latest release" -m "https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" --draft latest
          for pdffile in build/*.pdf
          do
            hub release edit -m "" -a "$pdffile" latest
          done
